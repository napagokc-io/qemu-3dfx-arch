# Default YAML
# Line wrap recommended
# Don't forget to change variables every QEMU update!
name: Build Stable Qemu-Virgl (macOS)

on:  
  workflow_dispatch:
  
jobs:
  build-macos:
    name: macOS
    runs-on: macos-latest
    env:
      pkgver: '9.2.0'
      patch:  '00-qemu92x-mesa-glide.patch'      
      ACTIONS_STEP_DEBUG: true
      PKG_CONFIG_PATH: "/opt/homebrew/opt/cyrus-sasl/lib/pkgconfig:/opt/homebrew/opt/zlib/lib/pkgconfig:/opt/homebrew/opt/jpeg/lib/pkgconfig:/opt/homebrew/opt/libxml2/lib/pkgconfig:/opt/homebrew/opt/xz/lib/pkgconfig:/opt/homebrew/opt/gnutls/lib/pkgconfig:/Users/runner/work/qemu-3dfx-arch/qemu-3dfx-arch/lib/pkgconfig:/opt/local/lib/pkgconfig"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/Homebrew
            ~/Library/Logs/Homebrew
          key: ${{ runner.os }}-brew-${{ hashFiles('**/Brewfile.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-brew-
      
      - name: Install dependencies
        run: |                  
          brew install $(brew deps --include-build qemu) || True
          brew install --cask xquartz || true
          brew install autoconf-archive binutils cyrus-sasl devutils GStreamer gtk+ gtk+3 jack jpeg libgcrypt || True
          brew install libiscsi libnfs libssh2 libx11 libxkbcommon libxml2 libxxf86vm mesa opus sdl12-compat sdl2 sdl2_image || True
          brew install sphinx-doc tree usbredir wget zlib || True                  

      - name: Cache build
        id: cache-build
        uses: actions/cache@v4
        with:
          path: build
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Cache include and lib directories
        id: cache-include-lib
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/include
            ${{ github.workspace }}/lib
          key: ${{ runner.os }}-include-lib-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-include-lib-

      - name: Cache depot_tools and angle directories
        id: cache-depot-angle
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/depot_tools
            ${{ github.workspace }}/source/angle/include
          key: ${{ runner.os }}-depot-angle-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-depot-angle-


      - name: Clean working directory
        continue-on-error: true
        run: git clean -fdx -e depot_tools -e source/angle/include -e build/angle -e build/virglrenderer -e build/libepoxy -e include -e lib      

      - name: Set up environment macos Virgl
        run: |
          if [ "${{ steps.cache-include-lib.outputs.cache-hit }}" != 'true' ]; then
          echo "Cache not found, setting up environment..."
            set -eux
            rm -rf include/*
            find include/.* -maxdepth 1 -mindepth 1 -exec rm -rf {} +
            rm -rf lib/*
            find lib/.* -maxdepth 1 -mindepth 1 -exec rm -rf {} +
            mkdir -p depot_tools build/qemu source/angle source/libepoxy source/virglrenderer source/qemu
            git -C depot_tools init
            git -C depot_tools fetch https://chromium.googlesource.com/chromium/tools/depot_tools 22df6f8e622dc3e8df8dc8b5d3e3503b169af78e
            git -C depot_tools checkout FETCH_HEAD
            cd source
            echo "Downloading src"
            wget -q https://download.qemu.org/qemu-${{ env.pkgver }}.tar.xz
            echo "Extracting src"
            tar xf qemu-${{ env.pkgver }}.tar.xz
            cd ..            
            export DEPOT_TOOLS_UPDATE=0
            export PATH="$PWD/depot_tools:$PATH"
            git -C source/angle init
            git -C source/angle fetch https://chromium.googlesource.com/angle/angle fffbc739779a2df56a464fd6853bbfb24bebb5f6
            git -C source/angle checkout FETCH_HEAD
            git -C source/libepoxy init
            git -C source/libepoxy fetch https://github.com/akihikodaki/libepoxy.git macos
            git -C source/libepoxy checkout FETCH_HEAD
            git -C source/virglrenderer init
            git -C source/virglrenderer fetch https://github.com/akihikodaki/virglrenderer.git macos
            git -C source/virglrenderer checkout FETCH_HEAD
            cd source/angle
            scripts/bootstrap.py
            gclient sync -D
            gn gen --args=is_debug=false ../../build/angle
            cd ../..
            ninja -C build/angle
            echo "Setting up libepoxy build"
            meson setup "-Dc_args=-I$PWD/source/angle/include" -Degl=yes -Dx11=false "--prefix=$PWD" build/libepoxy source/libepoxy
            echo "Installing libepoxy"
            meson install -C build/libepoxy
            echo "Setting up virglrenderer build"
            meson setup "-Dc_args=-I$PWD/source/angle/include" "--pkg-config-path=$PWD/lib/pkgconfig" "--prefix=$PWD" build/virglrenderer source/virglrenderer
            echo "Installing virglrenderer"
            meson install -C build/virglrenderer
          else
            echo "Using cached include and lib directories."
          fi

      - name: Cache installed include and lib files
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/include
            ${{ github.workspace }}/lib
          key: ${{ runner.os }}-include-lib-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-include-lib-

      - name: Upload source-angle-include as artifact
        uses: actions/upload-artifact@v4
        with:
          name: source-angle-include
          path: source/angle/include
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: true

      - name: Upload build-angle as artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-angle
          path: build/angle/
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: true    

      - name: Upload build-virglrenderer as artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-virglrenderer
          path: build/virglrenderer
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: true

      - name: Upload build-libepoxy as artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-libepoxy
          path: build/libepoxy
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: true      

      - name: Upload include as artifact
        uses: actions/upload-artifact@v4
        with:
          name: include
          path: include
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: true      

      - name: Upload depot-tools as artifact
        uses: actions/upload-artifact@v4
        with:
          name: depot_tools
          path: depot_tools
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: true

      - name: Upload lib as artifact
        uses: actions/upload-artifact@v4
        with:
          name: lib
          path: lib
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: true    

      - name: Fetch and checkout QEMU source
        continue-on-error: true
        run: |
          if [ "${{ steps.cache-include-lib.outputs.cache-hit }}" == 'true' ]; then
            cd source
            echo "Downloading src"
            wget -q https://download.qemu.org/qemu-${{ env.pkgver }}.tar.xz
            echo "Extracting src"
            tar xf qemu-${{ env.pkgver }}.tar.xz
            cd ..            
          fi
          meson install -C build/libepoxy || True

      - name: Create build/qemu directory        
        run: |
          if [ "${{ steps.cache-include-lib.outputs.cache-hit }}" == 'true' ]; then
            mkdir -p build/qemu
          fi

      - name: Prepare Angle
        continue-on-error: true
        run: |
          if [ "${{ steps.cache-include-lib.outputs.cache-hit }}" == 'true' ]; then
            export DEPOT_TOOLS_UPDATE=0
            export PATH="$PWD/depot_tools:$PATH"          
          fi     

      - name: Create install_dir
        run: mkdir -p install_dir

      - name: Patching build
        shell: bash
        continue-on-error: true
        run:  |
          echo "Adding files to src"
          rsync -rv qemu-0/hw/3dfx qemu-1/hw/mesa source/qemu-${{ env.pkgver }}/hw/
          cd source/qemu-${{ env.pkgver }}
          echo "Patching files to src"
          patch -p0 -i ../../${{ env.patch }}
          echo "Signing commit id to src"
          bash ../../scripts/sign_commit

      - name: Configure Qemu build
        continue-on-error: true
        working-directory: ./build/qemu
        shell: bash
        run: |
          echo "Configuring build"                
          # Add epoxy include path to extra-cflags
          PKG_CONFIG_PATH="$PWD/../../lib/pkgconfig" ../../source/qemu-${{ env.pkgver }}/configure "--extra-cflags=-I$PWD/../../source/angle/include -march=native -mtune=native -flto=auto" "--extra-ldflags=-L$PWD/../../lib" "--prefix=$PWD/../../install_dir"    
         
      - name: Compile Qemu build
        shell: bash
        continue-on-error: true
        working-directory: ./build/qemu               
        run: |
          echo "Compiling Build"
          make -j$(sysctl -n hw.ncpu)      

      - name: Installing Qemu build
        continue-on-error: true
        working-directory: ./build/qemu
        shell: bash
        run: |
          echo "Installing build to output"
          make install || True
          cd ../../install_dir
          bash ../scripts/sign_binary          
          cat <<EOF > version.txt
          QEMU-3dfx-arch (macOS Build)
          =================================================
          Github Actions Artifact Build
          Version ${{ env.pkgver }}
          Built using macOS
          EOF
          echo "Finished build at $(date)"

      - name: Upload QEMU binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: qemu-binary-virgl-not-signed
          path: ./install_dir      
